{"version":3,"sources":["components/Global/HeaderHome/HeaderHome.js","components/Global/SongCard/SongCard.js","components/Home/Home.js","components/Global/HeaderLogin/HeaderLogin.js","components/SignUp/SignUp.js","components/Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["HeaderHome","react_default","a","createElement","className","Link","to","Component","SongCard","src","alt","Home","react","Global_HeaderHome_HeaderHome","Global_SongCard_SongCard","HeaderLogin","LogIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","_event$target","target","name","value","console","log","state","setState","defineProperty","handlesubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","data","wrap","_context","prev","next","preventDefault","JSON","stringify","fetch","method","body","sent","json","concat","localStorage","setItem","token","stop","_x","apply","arguments","email","password","isLoggedIn","Global_HeaderLogin_HeaderLogin","type","id","placeholder","onChange","htmlFor","onClick","href","React","Login","class","for","_ref2","_callee2","e","_context2","axios","get","_x2","App","isloggedin","BrowserRouter","Switch","Route","exact","path","component","MySiftz","Search","SignUp","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1daca405.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./HeaderHome.css\";\r\n// import SignUpButton from \"../SignupButton\";\r\n// import LoginButton from \"../LoginButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass HeaderHome extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header-main\">\r\n        <Link to=\"/\">\r\n          <h2 className=\"main-main-title\">SIFTZ</h2>\r\n        </Link>\r\n        <div className=\"nav-right\">\r\n          <ul className=\"nav-items-right\">\r\n            <Link to=\"/mySiftz\">\r\n              <li>\r\n                <p>My Siftz</p>\r\n              </li>\r\n            </Link>\r\n            <Link to=\"/search\">\r\n              <li>\r\n                <p>How you feelin'?</p>\r\n              </li>\r\n            </Link>\r\n            <Link to=\"/signup\">\r\n              <li>\r\n                <p>Signup</p>\r\n              </li>\r\n            </Link>\r\n            <Link to=\"/login\">\r\n              <li>\r\n                <p>Login</p>\r\n              </li>\r\n            </Link>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderHome;\r\n","import React from \"react\";\r\nimport \"../../../css/main.css\";\r\n\r\nconst SongCard = () => (\r\n  <div className=\"col-3\">\r\n    <div className=\"card card2\">\r\n      <img\r\n        className=\"card-img-top\"\r\n        src=\"https://i.scdn.co/image/997575a5644176a1f975020c8ed5733becca06a4\"\r\n        alt=\"Card cap\"\r\n      />\r\n      <div className=\"card-body card-body2\">\r\n        <div className=\"avator\">\r\n          <img\r\n            src=\"https://cdn0.iconfinder.com/data/icons/iconshock_guys/512/andrew.png\"\r\n            alt=\"avator man\"\r\n          />\r\n        </div>\r\n        <p className=\"song-title\"> Still My Moment </p>\r\n        <div className=\"star-and-share\">\r\n          <i className=\"far fa-heart\" />\r\n          <i className=\"fas fa-share-square\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default SongCard;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport HeaderHome from \"../Global/HeaderHome\";\r\nimport SongCard from \"../Global/SongCard\";\r\nimport \"../../css/main.css\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <HeaderHome />\r\n        <div className=\"main-picture\">\r\n          <h3 className=\"marketing-blurp\">\r\n            プレミアム SIFTZ で人生をもっと快適に過ごそう。\r\n          </h3>\r\n        </div>\r\n        <div className=\"container main-container\">\r\n          <div className=\"first-text-wrapper\">\r\n            <h2>Songs people are sharing</h2>\r\n          </div>\r\n          <div className=\"row\">\r\n            <SongCard />\r\n            <SongCard />\r\n            <SongCard />\r\n            <SongCard />\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport \"../../../css/main.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass HeaderLogin extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header-index\">\r\n        <Link to=\"/\" className=\"titleColorAdjust\">\r\n          <h2 className=\"main-title\">SIFTZ</h2>\r\n        </Link>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderLogin;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderLogin from \"../Global/HeaderLogin\";\r\n//import axios from \"axios\";\r\nclass LogIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      isLoggedIn: false\r\n    };\r\n  }\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    console.log(this.state);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  handlesubmit = async event => {\r\n    event.preventDefault();\r\n    //this.createAccount.sendData(this.state);\r\n    // fetch(\"/signup\", {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify(this.state)\r\n    // });\r\n    console.log(JSON.stringify(this.state));\r\n    //axios.post(\"/auth/signup\", JSON.stringify(this.state)).then(response => {});\r\n    //   console.log(response.token);\r\n    // });\r\n    let res = await fetch(\"/auth/signup\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(this.state)\r\n    });\r\n\r\n    let data = await res.json();\r\n    console.log(`Hello, ${JSON.stringify(data)}`);\r\n    // saving the received token to the local storage\r\n\r\n    localStorage.setItem(\"$tkn\", data.token);\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <HeaderLogin />\r\n        <div className=\"login-form\">\r\n          <form>\r\n            <h2>Sign Up</h2>\r\n            <p className=\"text-center\">\r\n              Please provide your email and password for new SIFTZ Account\r\n            </p>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"inputEmail4\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                placeholder=\"Email Address\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"inputAddress\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-row signUpButtonWrap\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  id=\"exampleCheck1\"\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary login-btn\"\r\n                onClick={this.handlesubmit}\r\n              >\r\n                SignUp\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <small>Sign up using : </small>\r\n          <a href=\"/api/tiktok\">\r\n            <i className=\"fab fa-facebook-square mr-3 fa-lg\" />\r\n          </a>\r\n          <a href=\"/api/tiktok\">\r\n            <i className=\"fab fa-instagram mr-3 fa-lg\" />\r\n          </a>\r\n          <a href=\"/api/tiktok\">\r\n            <i className=\"fab fa-google mr-3 fa-lg\" />\r\n          </a>\r\n          <h3 className=\"leadToSignUp\">Already have an account?</h3>\r\n          <Link to=\"/auth/login\">\r\n            <button className=\"btn btn-primary signUp-btn\">LOG IN</button>\r\n          </Link>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderLogin from \"../Global/HeaderLogin\";\r\nimport axios from \"axios\";\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      isLoggedIn: false\r\n    };\r\n  }\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    console.log(this.state);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  handlesubmit = async event => {\r\n    event.preventDefault();\r\n    let res = await fetch(\"/auth/signin\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(this.state)\r\n    });\r\n\r\n    let data = await res.json();\r\n    console.log(data);\r\n    // saving the received token to the local storage\r\n    if (data != 404) localStorage.setItem(\"$tkn\", data.token);\r\n    else console.log(\"please provide valid credentials\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <HeaderLogin />\r\n        <div className=\"login-form\">\r\n          <form>\r\n            <h2>\r\n              <strong>Login</strong>\r\n            </h2>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                placeholder=\"email\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"inputAddress\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                placeholder=\"Password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-row signUpButtonWrap\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  class=\"form-check-input\"\r\n                  id=\"exampleCheck1\"\r\n                />\r\n                <label className=\"form-check-label\" for=\"exampleCheck1\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                onClick={this.handlesubmit}\r\n                className=\"btn btn-primary login-btn\"\r\n              >\r\n                Login\r\n              </button>\r\n            </div>\r\n            <small>Login with </small>\r\n            <a href=\"/api/tiktok\">\r\n              <i className=\"fab fa-facebook-square mr-3 fa-lg\" />\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"fab fa-instagram mr-3 fa-lg\" />\r\n            </a>\r\n            <button\r\n              onClick={async e => {\r\n                e.preventDefault();\r\n                console.log(\"i am clicked\");\r\n                axios.get(\"/auth/google\");\r\n              }}\r\n            >\r\n              <i className=\"fab fa-google mr-3 fa-lg\" />\r\n            </button>\r\n          </form>\r\n          <hr />\r\n          <h3 className=\"leadToSignUp\">Don't have an account?</h3>\r\n          <Link to=\"/auth/signUp\">\r\n            <button className=\"btn btn-primary signUp-btn\">SIGN UP</button>\r\n          </Link>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n//,\r\n//Link,\r\n//Redirect\r\nimport Home from \"./components/Home\";\r\nimport MySiftz from \"./components/MySiftz\";\r\nimport Search from \"./components/Search\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport Login from \"./components/Login\";\r\n// import { RedirectUser } from \"./components/Login/RedirectUser\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isloggedin: false };\r\n    //this.PrivateRoute = this.PrivateRoute.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   const presence = window.localStorage.getItem(\"token\");\r\n  //   this.setState({ isloggedin: presence ? true : false });\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route\r\n            path=\"/mySiftz\"\r\n            // component={this.state.isloggedin ? MySiftz : Login}\r\n            component={MySiftz}\r\n          />\r\n          <Route\r\n            path=\"/search\"\r\n            // component={this.state.isloggedin ? Search : Login}\r\n            component={Search}\r\n          />\r\n          <Route exact path=\"/signup\" component={SignUp} />\r\n\r\n          <Route\r\n            path=\"/login\"\r\n            // component={this.state.isloggedin ? Login : Login}\r\n            component={Login}\r\n          />\r\n          <Route exact path=\"*\" component={Home} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}